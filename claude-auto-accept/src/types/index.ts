export interface AutoAcceptConfig {
  enabled: boolean;
  sessionTimeout: number;
  maxAutoAccepts: number;
  allowedOperations: string[];
  whitelistPatterns: string[];
  bypassPatterns: string[];
  dangerPatterns: string[];
  safetyChecksEnabled: boolean;
  hookMode: 'passive' | 'active';
  auditLogPath: string;
  claudeSettingsDir: string;
}

export interface ConfirmationRequest {
  id: string;
  message: string;
  operation: string;
  timestamp: Date;
  context?: Record<string, any>;
  riskLevel: 'low' | 'medium' | 'high';
}

export interface ConfirmationResponse {
  id: string;
  accepted: boolean;
  reason: string;
  timestamp: Date;
  autoGenerated: boolean;
}

export interface AutoAcceptSession {
  id: string;
  startTime: Date;
  acceptCount: number;
  enabled: boolean;
  lastActivity: Date;
}

export interface AuditLogEntry {
  timestamp: Date;
  sessionId: string;
  requestId: string;
  operation: string;
  message: string;
  decision: 'accept' | 'reject' | 'ask';
  reason: string;
  riskLevel: 'low' | 'medium' | 'high';
  userOverride?: boolean;
}

export interface AgentContext {
  config: AutoAcceptConfig;
  session: AutoAcceptSession;
  logger: any;
}

export interface SlashCommandOptions {
  action: 'on' | 'off' | 'status' | 'config' | 'logs';
  value?: string;
  force?: boolean;
}

export interface SecurityCheck {
  name: string;
  pattern: RegExp;
  riskLevel: 'low' | 'medium' | 'high';
  action: 'allow' | 'deny' | 'ask';
}

export interface HookEvent {
  type: 'confirmation_request' | 'operation_start' | 'operation_end';
  data: Record<string, any>;
  timestamp: Date;
}